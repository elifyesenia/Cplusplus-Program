#include <iostream>
#include <string>
#include <map>

using namespace std;

// Class definition for PasswordManager
class PasswordManager {
private:
    // Map to store website-password pairs
    map<string, string> passwords;

public:
    // Method to add a password for a website
    void addPassword(const string& website, const string& password) {
        // Store the password in the map
        passwords[website] = password;
        // Notify the user that the password has been added
        cout << "Password added for " << website << endl;
    }

    // Method to get a password for a website
    void getPassword(const string& website) {
        // Check if the website is present in the map
        if (passwords.find(website) != passwords.end()) {
            // If found, display the password
            cout << "Password for " << website << ": " << passwords[website] << endl;
        } else {
            // If not found, notify the user
            cout << "No password found for " << website << endl;
        }
    }

    // Method to display all stored passwords
    void displayAllPasswords() {
        // Check if the map is empty
        if (passwords.empty()) {
            // If empty, notify the user
            cout << "No passwords stored." << endl;
            return;
        }
        // Iterate through the map and display each website-password pair
        cout << "Stored Passwords:" << endl;
        for (auto const& pair : passwords) {
            cout << "Website: " << pair.first << ", Password: " << pair.second << endl;
        }
    }
};

int main() {
    // Create an instance of PasswordManager
    PasswordManager manager;
    int choice;
    string website, password;

    do {
        // Display the menu options
        cout << "\nPassword Manager Menu:" << endl;
        cout << "1. Add a Password" << endl;
        cout << "2. Get a Password" << endl;
        cout << "3. Display All Passwords" << endl;
        cout << "4. Exit" << endl;
        cout << "Enter your choice: ";
        // Get user choice
        cin >> choice;

        // Process user choice
        switch (choice) {
            case 1:
                // Add a password
                cout << "Enter website: ";
                cin >> website;
                cout << "Enter password: ";
                cin >> password;
                manager.addPassword(website, password);
                break;
            case 2:
                // Get a password
                cout << "Enter website: ";
                cin >> website;
                manager.getPassword(website);
                break;
            case 3:
                // Display all stored passwords
                manager.displayAllPasswords();
                break;
            case 4:
                // Exit the program
                cout << "Exiting program." << endl;
                break;
            default:
                // Invalid choice
                cout << "Invalid choice. Please try again." << endl;
        }
    } while (choice != 4);

    return 0;
}
